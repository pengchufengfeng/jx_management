<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingxiang.common.dao.UserMapper">
	<resultMap id="UserResultMap" type="com.jingxiang.common.entity.User">
		<result column="id" property="id" />
		<result column="create_date" property="createDate" />
		<result column="update_date" property="updateDate" />
		<result column="del_flag" property="delFlag" />
		<result column="name" property="userName" />
		<result column="password" property="password" />
		<result column="root" property="root" />
		<collection property="roleList" ofType="com.jingxiang.common.entity.Role">
            <!-- id:唯一标识
             -->
            <id column="role_id" property="id"/>
            <result column="role_name" property="roleName"/>
            <result column="role_code" property="roleCode"/>
        </collection>

	</resultMap>

	<parameterMap type="com.jingxiang.common.entity.User" id="UserParameterMap">
		<parameter resultMap="id" property="id" />
		<parameter resultMap="create_date" property="createDate" />
		<parameter resultMap="update_date" property="updateDate" />
		<parameter resultMap="del_flag" property="delFlag" />
		<parameter resultMap="name" property="userName" />
		<parameter resultMap="password" property="password" />
		<parameter resultMap="root" property="root" />
	</parameterMap>


	<insert id="insert" parameterMap="UserParameterMap">
		INSERT INTO sys_user(
		id,
		name,
		password,
		root,
		create_date,
		creator,
		update_date,
		modifier,
		del_flag) VALUES(
		#{id},
		#{userName},
		#{password},
		#{root},
		#{createDate},
		#{creator},
		#{updateDate},
		#{modifier},
		#{delFlag}
		)
	</insert>


	<update id="deleteById">
		UPDATE sys_user
		SET
		del_flag = 1,
		<!-- update_date = #{updateDate},  -->
		modifier = #{modifier}
		WHERE id = #{id}
	</update>


	<!--根据id更新用户信息 -->
	<update id="update" parameterMap="UserParameterMap">
		UPDATE sys_user
		<set>
			<if test="userName != null">
				name = #{userName},
			</if>
			<if test="root != null">
				root = #{root},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="modifier != null">
				modifier = #{modifier},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate}
			</if>
		</set>
		WHERE
		id = #{id}
	</update>


	<!--根据entity自定义条件查询 -->
	<select id="findList" resultMap="UserResultMap">
		select * from sys_user
		where del_flag = 0

		<if test="userName != null">
			AND name like CONCAT('%', #{userName}, '%')
		</if>
		order by create_date desc
	</select>

	<!--根据id查询单条数据 -->
	<select id="get" resultMap="UserResultMap">
		select * from sys_user
		where
		id = #{id}
	</select>

	<!--查找所有数据 -->
	<select id="findAllList" resultMap="UserResultMap">
		SELECT * from sys_user
		where del_flag = 0
	</select>


	<!--检查用户是否存在于user表 -->
	<select id="checkExist" resultMap="UserResultMap">
		SELECT *
		FROM `user`
		WHERE
		del_flag = 0
		AND id = #{id}
	</select>

	<select id="findbynameandpassword" parameterMap="UserParameterMap"
		resultMap="UserResultMap">
		select
		*
		from sys_user
		where
		name = #{userName,jdbcType=VARCHAR}
		and
		password =#{password,jdbcType=VARCHAR}

	</select>
	<select id="findbyuserName" resultMap="UserResultMap">
		select
		*
		from sys_user
		where
		name = #{userName,jdbcType=VARCHAR}
	</select>
	
	<select id="findRolesBYUser" resultMap="UserResultMap">
            SELECT 
                  u.*,
                  r.id role_id,
                  r.role_name role_name,
                  r.role_code role_code
            FROM sys_user_role ur
            left join  sys_role u
            on   u.id = ur.user_id
            left join  sys_user r
            on   r.id=ur.role_id
            WHERE  ur.user_id = #{id}
    </select>
</mapper>


